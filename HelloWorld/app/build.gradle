apply plugin: 'com.android.application'

ext.versionMajor = 1
ext.versionMinor = 0
ext.versionPatch = 0
ext.versionClassifier = null
ext.minimumSdkVersion = 23

def getVersionCode = { ->
    def code = generateVersionCode();
    return code.toString().split("\n").size()
}


def getVersionName = { ->
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', '--tags'
            standardOutput = stdout
        }
        def matcher = stdout.toString().trim() =~ /\d+/
        def VersionNameStr = matcher[0] + '.' + matcher[1] + '.' + matcher[2]
        return VersionNameStr
    }
    catch (ignored) {
        return null
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.example.helloworld"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 29
        versionCode = generateVersionCode()
        versionName = getVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

private Integer generateVersionCode() {
    return  ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch*100+ 1
}
